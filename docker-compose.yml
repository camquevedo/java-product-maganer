services:
  app:
#    image: docker-spring-boot-postgres
    image: openjdk:17-jdk-slim
    build:
      context: .
    container_name: backend-service
    working_dir: /app
    volumes:
          - ./target/productManager-0.0.1-SNAPSHOT.jar:/app/productManager-0.0.1-SNAPSHOT.jar

    ports:
      - "8080:8080"
    command: ["java", "-jar", "/app/productManager-0.0.1-SNAPSHOT.jar"]
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/product_manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    depends_on:
      db: # Ensure the database starts first
        condition: service_healthy


  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: product_manager
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

    healthcheck: # Optional, ensures the database is ready before app starts
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
    driver: local
